# For Google Colab
from google.colab import files
import pandas as pd

# Prompt user to upload a file
uploaded = files.upload()

# Load the uploaded file into a DataFrame
for filename in uploaded.keys():
    df = pd.read_csv(filename)
    print(f"\nLoaded file: {filename}")

# Show first few rows
print("\nPreview of dataset:")
print(df.head())

# Show basic info
print("\nDataset info:")
print(df.info())
     
Upload widget is only available when the cell has been executed in the current browser session. Please rerun this cell to enable.
Saving your_stock_data.csv to your_stock_data.csv

Loaded file: your_stock_data.csv

Preview of dataset:
         Date        Open        High         Low       Close   Adj Close  \
0  2024-01-02  170.160004  170.330002  166.990005  169.820007  169.188187   
1  2024-01-03  169.949997  170.349991  167.220001  167.360001  166.738861   
2  2024-01-04  167.669998  170.389999  166.850006  169.949997  169.317627   
3  2024-01-05  170.279999  172.399994  170.050003  171.800003  171.160599   
4  2024-01-08  171.809998  172.679993  171.080002  171.300003  170.662796   

     Volume  
0  57997300  
1  61045200  
2  45502700  
3  46401600  
4  41741100  

Dataset info:
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 10 entries, 0 to 9
Data columns (total 7 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   Date       10 non-null     object 
 1   Open       10 non-null     float64
 2   High       10 non-null     float64
 3   Low        10 non-null     float64
 4   Close      10 non-null     float64
 5   Adj Close  10 non-null     float64
 6   Volume     10 non-null     int64  
dtypes: float64(5), int64(1), object(1)
memory usage: 692.0+ bytes
None

# Assuming you've uploaded the file and it's named 'your_stock_data.csv'

# Load dataset into a DataFrame
df = pd.read_csv('your_stock_data.csv')

# Convert 'Date' column to datetime if it's present
if 'Date' in df.columns:
    df['Date'] = pd.to_datetime(df['Date'])
    df = df.sort_values('Date')
    df.set_index('Date', inplace=True)

# Show basic dataset info
print("Dataset successfully loaded.\n")
print("Shape:", df.shape)
print("\nFirst 5 rows:")
print(df.head())

# Summary statistics
print("\nSummary statistics:")
print(df.describe())
     
Dataset successfully loaded.

Shape: (10, 6)

First 5 rows:
                  Open        High         Low       Close   Adj Close  \
Date                                                                     
2024-01-02  170.160004  170.330002  166.990005  169.820007  169.188187   
2024-01-03  169.949997  170.349991  167.220001  167.360001  166.738861   
2024-01-04  167.669998  170.389999  166.850006  169.949997  169.317627   
2024-01-05  170.279999  172.399994  170.050003  171.800003  171.160599   
2024-01-08  171.809998  172.679993  171.080002  171.300003  170.662796   

              Volume  
Date                  
2024-01-02  57997300  
2024-01-03  61045200  
2024-01-04  45502700  
2024-01-05  46401600  
2024-01-08  41741100  

Summary statistics:
             Open        High         Low       Close   Adj Close  \
count   10.000000   10.000000   10.000000   10.000000   10.000000   
mean   171.471001  172.610999  170.364001  171.764003  171.125594   
std      1.951835    1.712852    2.493893    2.189822    2.181621   
min    167.669998  170.330002  166.850006  167.360001  166.738861   
25%    170.190003  170.892498  167.927502  170.287498  169.653919   
50%    171.654999  173.119996  171.065002  172.190002  171.550537   
75%    173.127499  173.735001  172.225002  173.422504  172.778702   
max    173.820007  175.080002  173.509995  174.350006  173.700912   

             Volume  
count  1.000000e+01  
mean   5.035219e+07  
std    8.155753e+06  
min    4.172470e+07  
25%    4.572742e+07  
50%    4.728040e+07  
75%  â€¦
